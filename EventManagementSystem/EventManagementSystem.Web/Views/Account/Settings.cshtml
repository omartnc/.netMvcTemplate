@model EventManagementSystem.Web.Models.AccountModel

<div class="row">
    <div class="col-lg-6">
        <form method="post">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">
                        <strong>Kullanıcı Modülü Ayarları</strong>
                    </h4>
                </div>
                <div class="card-body">
                    @if (Model.IsSaved)
                    {
                        <div class="alert alert-success" role="alert">
                            Ayarlar başarıyla kaydedildi.
                        </div>
                    }
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label>Site Adı</label>
                                @Html.TextBoxFor(model => model.SiteHeader, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label>Hatalı Giriş Limiti</label>
                                @Html.TextBoxFor(model => model.InvalidLoginLimit, new { @class = "form-control", type = "number" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Hatalı Giriş Aksiyonu</label>
                                @Html.DropDownListFor(model => model.InvalidLoginAction, Model.InvalidLoginActions, new { @class = "form-control", data_provide = "selectpicker" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Captcha Güvenlik Modülü</label>
                                @Html.DropDownListFor(model => model.CaptchaStatus, Model.CaptchaStatuses, new { @class = "form-control", data_provide = "selectpicker" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Azure Giriş Modülü</label>
                                @Html.DropDownListFor(model => model.AzureLoginStatus, Model.AzureLoginStatuses, new { @class = "form-control", data_provide = "selectpicker" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>OneSignalAppId</label>
                                @Html.TextBoxFor(model => model.OneSignalAppId, Model.OneSignalAppId, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>OneSignalApiKey</label>
                                @Html.TextBoxFor(model => model.OneSignalApiKey, Model.OneSignalApiKey, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>E-Posta Yazılınca Resim Göster</label>
                                @Html.DropDownListFor(model => model.ShowUserPhotoOnLogin, Model.YesNo, new { @class = "form-control", data_provide = "selectpicker" })
                            </div>
                        </div>
                    </div>
                </div>
                <footer class="card-footer text-right">
                    <button type="submit" class="btn btn-info btn-label" href="#">
                        <label><i class="fa fa-save"></i></label> Güncelle
                    </button>
                </footer>
            </div>
        </form>
    </div>
    <div class="col-lg-6">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">
                    <strong>Arka Plan Resimleri</strong>
                </h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        <div id="Dropzone" data-provide="dropzone" data-url="@Url.Action("UploadImage")" data-accepted-files="image/*" data-parallel-uploads="1" dict-default-message="Resim yüklemek için buraya tıklayın veya resimleri sürükleyin."></div>
                    </div>
                </div>
                <br />
                <div class="row">
                    @if (Model.LoginBackgroundPhotos != null)
                    {
                        foreach (var photo in Model.LoginBackgroundPhotos)
                        {
                            <div class="col-md-6">
                                <figure class="teaser teaser-simple">
                                    <img src="@photo?width=384&height=216&mode=crop" alt="">
                                    <figcaption>
                                        <a class="btn btn-primary" href="@photo" target="_blank">
                                            <i class="fa fa-eye"></i> Görüntüle
                                        </a>
                                        <a class="btn btn-danger delete-button" href="#">
                                            <i class="fa fa-times"></i> Sil
                                        </a>
                                    </figcaption>
                                </figure>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script data-provide="sweetalert">
        $(function() {
            setTimeout(function() {
                Dropzone.instances[0].on('queuecomplete', function() {
                    swal({
                        title: 'Yükleme tamamlandı!',
                        text: 'Tüm resimler başarıyla yüklendi',
                        type: 'success',
                        timer: 2000
                    });
                    setTimeout(function() {
                        location.reload();
                    }, 2200);
                });
            },2000);

            $('.delete-button').on('click', function () {
                var filePath = $(this).closest('.teaser').find('img').attr("src");
                swal({
                    title: 'Emin misiniz?',
                    text: 'Oturum açma ekranında görünecek bu resmi silmek istediğinize emin misiniz?',
                    imageUrl: filePath,
                    imageWidth: 384,
                    imageHeight: 216,
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonClass: 'btn btn-danger',
                    cancelButtonClass: 'btn btn-seconary',
                    confirmButtonText: 'EVET, SİL',
                    cancelButtonText: 'HAYIR'
                }).then(function () {
                    $.get("@Url.Action("DeleteImage")?filePath=" + filePath.substring(0,filePath.indexOf('?')), function( data ) {
                        if (data == "True") {
                            swal({
                                title: 'Silindi!',
                                text: 'Resim başarıyla silindi',
                                type: 'success',
                                timer: 2000
                            });
                            setTimeout(function() {
                                location.reload();
                            }, 2200);
                        }
                    });
                });
            });
        })
    </script>
}